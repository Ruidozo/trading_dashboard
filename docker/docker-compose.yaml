version: '3.8'

networks:
  docker_trading_network:
    name: docker_trading_network
    driver: bridge

services:
  cloudsql-proxy:
    image: gcr.io/cloudsql-docker/gce-proxy:1.19.1
    container_name: cloudsql-proxy
    command: /cloud_sql_proxy -instances=trading-dashboard-449211:us-central1:trading-dashboard-db=tcp:0.0.0.0:5432 -credential_file=/secrets/cloudsql/credentials.json
    volumes:
      - ../configs/google_credentials.json:/secrets/cloudsql/credentials.json
    networks:
      - docker_trading_network

  postgres:
    image: postgres:13
    container_name: postgres
    environment:
      POSTGRES_USER: airflow # pragma: allowlist secret
      POSTGRES_PASSWORD: airflow # pragma: allowlist secret
      POSTGRES_DB: airflow # pragma: allowlist secret
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - docker_trading_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U airflow"]
      interval: 30s
      timeout: 10s
      retries: 5
    dns:
      - 8.8.8.8
      - 8.8.4.4
    command: ["postgres", "-c", "listen_addresses=0.0.0.0"]

  airflow-init:
    build:
      context: .
      dockerfile: ./Dockerfile
    image: custom-airflow:latest
    container_name: airflow-init
    env_file:
      - ../configs/secrets.env
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres:5432/airflow # pragma: allowlist secret
      GOOGLE_APPLICATION_CREDENTIALS: /opt/airflow/configs/google_credentials.json
    volumes:
      - ../configs:/opt/airflow/configs
      - ../dags:/opt/airflow/dags
      - ../data:/opt/airflow/data
    command: >
      bash -c "
        airflow db check || airflow db init && airflow db upgrade &&
        airflow users create --username admin --password admin123 --firstname Airflow --lastname Admin --role Admin --email admin@example.com || echo 'User already exists'"
    networks:
      - docker_trading_network
    extra_hosts:
      - "host.docker.internal:host-gateway"  
    dns:
      - 8.8.8.8
      - 8.8.4.4

  airflow-webserver:
    build:
      context: .
      dockerfile: ./Dockerfile
    image: custom-airflow:latest
    container_name: airflow-webserver
    depends_on:
      postgres:
        condition: service_healthy
      airflow-init:
        condition: service_completed_successfully
    env_file:
      - ../configs/secrets.env
    environment:
      AIRFLOW__WEBSERVER__WORKERS: "1"
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres:5432/airflow # pragma: allowlist secret
      AIRFLOW__WEBSERVER__RBAC: "True"
      GCS_BUCKET_NAME: trading_dashboard_stock_data
      GOOGLE_APPLICATION_CREDENTIALS: /opt/airflow/configs/google_credentials.json
    ports:
      - "8080:8080"
    volumes:
      - ../dags:/opt/airflow/dags
      - airflow_logs:/opt/airflow/logs
      - airflow_plugins:/opt/airflow/plugins
      - ../data:/opt/airflow/data
      - ../configs:/opt/airflow/configs
    networks:
      - docker_trading_network
    extra_hosts:
      - "host.docker.internal:host-gateway"  
    dns:
      - 8.8.8.8
      - 8.8.4.4
    command: ["airflow", "webserver"]
    restart: always

  airflow-scheduler:
    build:
      context: .
      dockerfile: ./Dockerfile
    image: custom-airflow:latest
    container_name: airflow-scheduler
    depends_on:
      postgres:
        condition: service_healthy
      airflow-init:
        condition: service_completed_successfully
    env_file:
      - ../configs/secrets.env
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres:5432/airflow # pragma: allowlist secret
      GOOGLE_APPLICATION_CREDENTIALS: /opt/airflow/configs/google_credentials.json
    volumes:
      - ../configs:/opt/airflow/configs
      - ../dags:/opt/airflow/dags
      - airflow_logs:/opt/airflow/logs
      - airflow_plugins:/opt/airflow/plugins
      - ../data:/opt/airflow/data
    command: ["airflow", "scheduler"]
    extra_hosts:
      - "host.docker.internal:host-gateway"  
    networks:
      - docker_trading_network
    dns:
      - 8.8.8.8
      - 8.8.4.4
    restart: always

volumes:
  postgres_data:
  project_data:
  airflow_logs:
  airflow_plugins: